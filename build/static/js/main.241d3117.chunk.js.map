{"version":3,"sources":["utils/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Mode","help","mineClearance","row","col","test","console","log","clicked","danergousAreaNumber","computedDangerousArea","aroundDangerous","autoClickAroundArea","undefined","number","getUserSelectAreaResult","selectRowCol","clickType","selectArea","copyMineClearance","JSON","parse","stringify","tag","aroundDangerousArea","Box","styled","div","SafeBox","DangerousBox","TagBOx","numberEmojiMap","CountContext","React","createContext","rowAndColMinClearance","setRowAndColMinClearance","displayName","useMineData","useState","initMineData","probability","result","rowIndex","colArray","colIndex","areaData","Math","random","push","initMineClearanceData","useEffect","checkGameResult","useCallback","resultArray","flat","clickMineAreaFlag","find","passGameFlag","window","confirm","CountProvider","children","Provider","value","useCountContext","context","useContext","Error","AreaRow","rowData","handleClick","handleRightClick","mode","renderAroundDangerousNumber","style","display","justifyContent","map","cursor","onClick","e","onContextMenu","prod","border","MineArea","afterSelectResult","mineClearanceRow","index","MineHeader","className","Statistics","remainMineNumber","filter","length","AppProviders","App","setMode","name","id","onChange","Number","target","dev","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","document","oncontextmenu","evt","preventDefault","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.241d3117.chunk.js","sourcesContent":["export type LimitNumber = 0 | 1 // 0 代表安全区, 1 代表雷区\nexport type SafeAreaData = {\n  number: 0\n  clicked: boolean\n  tag: boolean // 是否被标记\n  aroundDangerous: number | null\n}\nexport type MineAreaData = {\n  number: 1\n  clicked: boolean\n  tag: boolean // 是否被右键标记\n} // 雷区的数据\nexport type MineClearance = (SafeAreaData | MineAreaData)[][]\n\nexport type ClickType = 'leftClick' | 'rightClick' // rightClick 表示标记区块\nexport enum Mode{\n  'dev',\n  'prod'\n}\n\n// 用户选择的行列\n export interface SelectRowCol {\n  row: number,\n  col: number,\n}\n\n// 变量 生成雷区的概率\nconst ONE_PROBABILITY = 30;\n\n// 返回数字 1 的概率\nfunction getOneProbability(probability: number): LimitNumber{\n  return Math.random() <= (probability / 100 ) ? 1 : 0\n}\n\n// 生成扫雷所需数据\nexport function initMineClearanceData(row: number, col: number): MineClearance{\n  let result = [];\n  for(let rowIndex = 0;rowIndex <= row - 1;rowIndex++){\n    let colArray = [];\n    for(let colIndex = 0;colIndex <= col - 1;colIndex++){\n      const randomData = getOneProbability(ONE_PROBABILITY);\n      let areaData: (SafeAreaData | MineAreaData);\n      if(randomData === 1){\n        areaData = {\n          number: 1,\n          clicked: false,\n          tag: false,\n        }\n      } else {\n        areaData = {\n          number: 0,\n          clicked: false,\n          tag: false,\n          aroundDangerous: null\n        }\n      }\n      colArray.push(areaData);\n    }\n    result.push(colArray);\n  }\n  console.log(result)\n  return result\n}\n\nconst help = (mineClearance: MineClearance, row: number, col: number)=>{\n  let test = mineClearance[row] && mineClearance[row][col] as SafeAreaData;\n  console.log('test ', test, row, col);\n  if(test && !test.clicked){\n    // 没有超出边界,需要计算周围地雷区数量 + 修改为 click\n    test.clicked = true;\n    let danergousAreaNumber = computedDangerousArea(mineClearance, row, col);\n    test.aroundDangerous = danergousAreaNumber;\n    if(danergousAreaNumber === 0){\n      autoClickAroundArea(mineClearance, row, col)\n    }\n  }\n  console.log(mineClearance);\n}\n\n\nconst autoClickAroundArea = (mineClearance: MineClearance, row: number, col: number)=>{\n  // if((mineClearance[row - 1] && mineClearance[row - 1][col - 1])){\n  //   // 没有超出边界,需要计算周围地雷区数量 + 修改为 click\n  //   mineClearance[row - 1][col - 1].clicked = true;\n  //   let danergousAreaNumber = computedDangerousArea(mineClearance, row - 1, col - 1);\n  //   if(danergousAreaNumber === 0){\n  //     autoClickAroundArea(mineClearance, row - 1, col - 1)\n  //   }\n  // }\n  help(mineClearance, row - 1,col - 1);\n  help(mineClearance, row - 1,col);\n  help(mineClearance, row - 1,col + 1);\n\n  help(mineClearance, row,col - 1);\n  help(mineClearance, row,col + 1);\n\n  help(mineClearance, row + 1,col - 1);\n  help(mineClearance, row + 1,col);\n  help(mineClearance, row + 1,col + 1);\n\n\n\n\n  // let aroundArea1 = (mineClearance[row - 1] && mineClearance[row - 1][col - 1]) === undefined ? 0 : mineClearance[row - 1][col - 1].number;\n  // let aroundArea2 = (mineClearance[row - 1] && mineClearance[row - 1][col]) === undefined ? 0 : mineClearance[row - 1][col].number;\n  // let aroundArea3 = (mineClearance[row - 1] && mineClearance[row - 1][col + 1]) === undefined ? 0 : mineClearance[row - 1][col + 1].number;\n  // let aroundArea4 = (mineClearance[row] && mineClearance[row][col - 1]) === undefined ? 0 : mineClearance[row][col - 1].number;\n  // let aroundArea5 = (mineClearance[row] && mineClearance[row][col + 1]) === undefined ? 0 : mineClearance[row][col + 1].number;\n  // let aroundArea6 = (mineClearance[row + 1] && mineClearance[row + 1][col - 1]) === undefined ? 0 : mineClearance[row + 1][col - 1].number;\n  // let aroundArea7 = (mineClearance[row + 1] && mineClearance[row + 1][col]) === undefined ? 0 : mineClearance[row + 1][col].number;\n  // let aroundArea8 = (mineClearance[row + 1] && mineClearance[row + 1][col + 1]) === undefined ? 0 : mineClearance[row + 1][col + 1].number;\n\n  // mineClearance[row - 1][col - 1].clicked = true;\n  // computedDangerousArea()\n  //\n  //\n  // mineClearance[row - 1][col - 1].clicked = true;\n\n}\n\n// 计算得出周围 8 个区块雷区个数\n// feat: 核心功能 1\nexport function computedDangerousArea(mineClearance: MineClearance, row: number, col: number): number{\n  let aroundArea1 = (mineClearance[row - 1] && mineClearance[row - 1][col - 1]) === undefined ? 0 : mineClearance[row - 1][col - 1].number;\n  let aroundArea2 = (mineClearance[row - 1] && mineClearance[row - 1][col]) === undefined ? 0 : mineClearance[row - 1][col].number;\n  let aroundArea3 = (mineClearance[row - 1] && mineClearance[row - 1][col + 1]) === undefined ? 0 : mineClearance[row - 1][col + 1].number;\n  let aroundArea4 = (mineClearance[row] && mineClearance[row][col - 1]) === undefined ? 0 : mineClearance[row][col - 1].number;\n  let aroundArea5 = (mineClearance[row] && mineClearance[row][col + 1]) === undefined ? 0 : mineClearance[row][col + 1].number;\n  let aroundArea6 = (mineClearance[row + 1] && mineClearance[row + 1][col - 1]) === undefined ? 0 : mineClearance[row + 1][col - 1].number;\n  let aroundArea7 = (mineClearance[row + 1] && mineClearance[row + 1][col]) === undefined ? 0 : mineClearance[row + 1][col].number;\n  let aroundArea8 = (mineClearance[row + 1] && mineClearance[row + 1][col + 1]) === undefined ? 0 : mineClearance[row + 1][col + 1].number;\n\n  return aroundArea1 + aroundArea2 + aroundArea3 + aroundArea4 + aroundArea5 + aroundArea6 + aroundArea7 + aroundArea8\n}\n\n// 根据用户所选, 返回结果\n// feat: 核心功能,递归点击绝对安全区块\nexport function getUserSelectAreaResult(mineClearance: MineClearance, selectRowCol: SelectRowCol, clickType: ClickType): MineClearance{\n  let {row, col} = selectRowCol;\n  const selectArea = mineClearance[row][col].number;\n  const copyMineClearance = JSON.parse(JSON.stringify(mineClearance));\n\n  if(clickType === 'leftClick'){\n    if(copyMineClearance[row][col].tag){\n      console.log('已经右键标记,请解除标记');\n      return copyMineClearance\n    }\n    copyMineClearance[row][col] = {...mineClearance[row][col], clicked: true}\n    if(selectArea === 0){\n      let aroundDangerousArea = computedDangerousArea(mineClearance, row, col);\n      if(aroundDangerousArea === 0){\n        autoClickAroundArea(copyMineClearance, row, col);\n      }\n      copyMineClearance[row][col] = {...mineClearance[row][col], aroundDangerous: aroundDangerousArea,  clicked: true}\n    }\n  } else {\n    copyMineClearance[row][col] = {...mineClearance[row][col], tag: !mineClearance[row][col].tag}\n  }\n  return copyMineClearance\n\n\n\n\n}\nexport function computedRemainMineNumber(initData: MineClearance): number{\n  const afterFlatData = initData.flat().filter((areaData)=>{\n    return areaData.number === 1 && !areaData.tag;\n  });\n\n  return afterFlatData.length\n}\n\n","import React, {ChangeEvent, useCallback, useEffect, useState} from 'react';\nimport './App.css';\nimport {\n  getUserSelectAreaResult,\n  initMineClearanceData,\n  MineAreaData,\n  MineClearance,\n  SafeAreaData,\n  computedRemainMineNumber,\n  Mode,\n} from './utils';\n\nimport styled from 'styled-components'\n\nconst Box = styled.div`\n  width: 40px;\n  height: 40px;\n  box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n  margin:5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nconst SafeBox = styled(Box)`\n`\nconst DangerousBox = styled(Box)`\n`\n\nconst TagBOx = styled(Box)`\n`\nconst numberEmojiMap = ['✅', '1️⃣', '2️⃣', '3️⃣', '4️⃣', '5️⃣', '6️⃣', '7️⃣', '8️⃣']\n// 1️⃣ 创建全局 context\nconst CountContext = React.createContext<{\n  rowAndColMinClearance: MineClearance,\n  setRowAndColMinClearance: (n: MineClearance)=>void,\n\n}>({\n  rowAndColMinClearance: [],\n  setRowAndColMinClearance: ()=>{},\n\n});\nCountContext.displayName = \"countContext\";\n\nconst useMineData = ()=>{\n  const [rowAndColMinClearance, setRowAndColMinClearance] = useState<MineClearance>([]);\n\n  const initMineData = ()=>{\n    setRowAndColMinClearance(initMineClearanceData(5, 8));\n  }\n\n  useEffect(()=>{\n    initMineData();\n  }, []);\n\n  // 判断用户的结果\n  const checkGameResult = useCallback(()=>{\n    let resultArray = rowAndColMinClearance?.flat();\n    // eslint-disable-next-line array-callback-return\n    let clickMineAreaFlag = resultArray && resultArray.find((areaData)=>{\n      if(areaData.number === 1 && areaData.clicked){\n        return true\n      }\n    }) !== undefined\n\n    // eslint-disable-next-line array-callback-return\n    let passGameFlag = resultArray && resultArray.find((areaData)=>{\n      if((areaData.number === 0 && !areaData.clicked) || (areaData.number === 1 && !areaData.tag)){\n        return true\n      }\n    }) === undefined\n\n    if(clickMineAreaFlag){\n      if (window.confirm(\"游戏失败, 点击确定重新开始游戏\")) {\n        initMineData();\n      } else {\n      }\n    }\n\n    if(passGameFlag){\n      console.log('通过游戏');\n    }\n\n  }, [rowAndColMinClearance])\n\n  useEffect(()=>{\n    console.log('新 data', rowAndColMinClearance);\n    // setRowAndColMinClearance(rowAndColMinClearance);\n    checkGameResult();\n  }, [checkGameResult, rowAndColMinClearance]);\n\n  return {\n    rowAndColMinClearance,\n    setRowAndColMinClearance,\n  };\n}\n\nconst useSelectLevel = ()=>{\n  const [selectLevel, setSelectLevel] = useState();\n}\n\nconst CountProvider = ({ children }: any) => {\n  const { setRowAndColMinClearance, rowAndColMinClearance } = useMineData();\n  return (\n    <CountContext.Provider value={{ setRowAndColMinClearance, rowAndColMinClearance }} children={children} />\n  );\n};\n\nconst useCountContext = () => {\n  const context = React.useContext(CountContext);\n  console.log(context);\n  if (!context) {\n    throw new Error(\"useAuth 必须在 AuthProvider 中使用\");\n  }\n  return context;\n};\n\n\n// ui 一行的区块\nfunction AreaRow(\n  {\n    rowData,\n    rowIndex,\n    handleClick,\n    handleRightClick,\n    mode,\n  }: {\n    rowData: (SafeAreaData | MineAreaData)[],\n    rowIndex: number,\n    handleClick: (rowIndex: number, colIndex: number, e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\n    handleRightClick: (rowIndex: number, colIndex: number, e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\n    mode: Mode,\n  }\n  ){\n  const renderAroundDangerousNumber = (areaData: SafeAreaData | MineAreaData)=>{\n    if(areaData.number === 0 && areaData.clicked){\n      let aroundDangerous = areaData.aroundDangerous as number;\n      return (\n        <p>{numberEmojiMap[aroundDangerous]}</p>\n      )\n    } else {\n      return null\n    }\n  }\n\n\n  const renderAreaContent = (areaData: SafeAreaData | MineAreaData)=>{\n    if(mode === Mode.prod){\n      if(areaData.tag){\n        return (\n          <TagBOx>⛳</TagBOx>\n        )\n      }\n      if(!areaData.clicked){ // 未点击状态\n        return (\n          <Box />\n        )\n      } else if(areaData.clicked){ // 点击状态\n        if(areaData.number === 0){ // 点击安全区\n          return (\n            <SafeBox>\n              {renderAroundDangerousNumber(areaData)}\n            </SafeBox>\n          )\n        } else { // 点击危险区\n          return (\n            <DangerousBox />\n          )\n        }\n      }\n    } else {\n      return (\n        <div style={{border: '1px solid red'}}>\n          <p>\n            {areaData.number === 1 ? `地雷${areaData.number}` : `安全${areaData.number}`}\n          </p>\n          <p>\n            {areaData.tag ? `标记${areaData.tag}` : `标记${areaData.tag}`}\n          </p>\n          <p>\n            {areaData.clicked ? `点击${areaData.clicked}` : `点击${areaData.clicked}`}\n          </p>\n          {\n            renderAroundDangerousNumber(areaData)\n          }\n        </div>\n      )\n    }\n\n\n  }\n\n  return (\n    <div style={{display: 'flex', justifyContent:'center'}}>\n      {\n        rowData.map((col, colIndex)=>(\n          <div\n            style={{cursor: 'pointer'}}\n            key={`${rowIndex}-${colIndex}`}\n            onClick={(e)=>{handleClick(rowIndex, colIndex, e)}}\n            onContextMenu={(e)=>{handleRightClick(rowIndex, colIndex, e)}}\n          >\n            {renderAreaContent(col)}\n          </div>\n        ))\n      }\n    </div>\n  )\n}\n\nfunction MineArea({mode}: {mode: Mode}) {\n  const {setRowAndColMinClearance, rowAndColMinClearance} = useCountContext();\n\n  const handleClick = (rowIndex: number, colIndex: number, e: React.MouseEvent<HTMLDivElement, MouseEvent>)=>{\n    console.log(e);\n    let afterSelectResult = rowAndColMinClearance && getUserSelectAreaResult(rowAndColMinClearance, {row:rowIndex, col:colIndex}, 'leftClick');\n    setRowAndColMinClearance(afterSelectResult);\n  }\n\n  const handleRightClick = (rowIndex: number, colIndex: number, e: React.MouseEvent<HTMLDivElement, MouseEvent>)=>{\n    console.log(e);\n    let afterSelectResult = rowAndColMinClearance && getUserSelectAreaResult(rowAndColMinClearance, {row:rowIndex, col:colIndex}, 'rightClick');\n    setRowAndColMinClearance(afterSelectResult);\n  }\n\n  return (\n    <div>\n      {\n        rowAndColMinClearance &&\n        rowAndColMinClearance.map((mineClearanceRow, index)=>(\n          <AreaRow\n            rowData={mineClearanceRow}\n            rowIndex={index}\n            key={index}\n            handleClick={handleClick}\n            handleRightClick={handleRightClick}\n            mode={mode}\n          />\n        ))\n      }\n    </div>\n  );\n}\nfunction MineHeader(){\n\n  return (\n    <div className={'mine-header'}>\n      {/*<SelectDifficulty />*/}\n      <Statistics />\n    </div>\n  )\n}\n\nfunction SelectDifficulty(){\n  return (\n    <div>\n      <select >\n        <option value={Mode.prod}>简单</option>\n        <option value={Mode.dev}>普通</option>\n        <option value={Mode.dev}>困难</option>\n      </select>\n    </div>\n  )\n}\nfunction Statistics(){\n  const { rowAndColMinClearance } = useCountContext();\n  console.log(rowAndColMinClearance);\n  let remainMineNumber = computedRemainMineNumber(rowAndColMinClearance);\n\n  return (\n    <div>\n      ⛳: {remainMineNumber}\n    </div>\n  )\n}\n\nfunction App(){\n\n  const [mode, setMode] = useState<number>(0);\n\n  const handleSelectMode = (e: ChangeEvent<HTMLSelectElement>)=>{\n    setMode(Number(e.target.value));\n  }\n\n  return (\n    <div className={'App'}>\n      <div className=\"mine-left\">\n        选择开发模型\n        <select name=\"cars\" id=\"cars\" onChange={handleSelectMode} value={mode}>\n          <option value={Mode.prod}>生产环境</option>\n          <option value={Mode.dev}>开发环境</option>\n        </select>\n      </div>\n      <div className=\"mine-ct\">\n        <MineHeader />\n        <MineArea mode={mode}/>\n      </div>\n      <div className=\"mine-right\">2</div>\n    </div>\n  )\n}\n\nexport const AppProviders = ({ children }: any) => {\n  return (\n    CountProvider && <CountProvider>{children}</CountProvider>\n  )\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App, {AppProviders} from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// 禁用右键默认行为\ndocument.oncontextmenu = function (evt) {\n  evt.preventDefault();\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProviders>\n      <App />\n    </AppProviders>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}